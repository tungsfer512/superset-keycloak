x-superset-image: &superset-image superset-keycloak
x-superset-depends-on:
  &superset-depends-on
  - redis
x-superset-volumes:
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  &superset-volumes
  - /docker/superset_app/superset_home:/app/superset_home

x-superset-environment:
  &superset-environment
  - FLASK_ENV=production
  - SUPERSET_ENV=production
  - FLASK_DEBUG=False
  
version: "3.7"

volumes:
  redis:
    external: false

services:
  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  superset:
    env_file: .env
    image: *superset-image
    build: .
    container_name: superset_app
    command: [ "/app/docker/docker-bootstrap.sh", "app-gunicorn" ]
    user: "root"
    restart: always
    ports:
      - $HOST_PORT:$SUPERSET_PORT
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    environment: *superset-environment

  superset-init:
    image: *superset-image
    container_name: superset_init
    build: .
    command: [ "/app/docker/docker-init.sh" ]
    env_file: .env
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    environment: *superset-environment

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    build: .
    command: [ "/app/docker/docker-bootstrap.sh", "worker" ]
    env_file: .env
    restart: always
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    environment: *superset-environment

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    build: .
    command: [ "/app/docker/docker-bootstrap.sh", "beat" ]
    env_file: .env
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    environment: *superset-environment
